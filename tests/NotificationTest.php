<?php
/**
 * Created by PhpStorm.
 * User: ps
 * Date: 19/10/18
 * Time: 02:10 PM
 */

namespace Punksolid\Wialon\Tests;
use Orchestra\Testbench\TestCase;
use Punksolid\Wialon\Geofence;
use Punksolid\Wialon\Notification;
use Punksolid\Wialon\Resource;
use Punksolid\Wialon\Wialon;


class NotificationTest extends TestCase
{
    /**
     * Define environment setup.
     *
     * @param  \Illuminate\Foundation\Application $app
     * @return void
     */
    protected function getEnvironmentSetUp($app)
    {
        $app['config']->set('services.wialon.token', '5dce19710a5e26ab8b7b8986cb3c49e58C291791B7F0A7AEB8AFBFCEED7DC03BC48FF5F8');
    }
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub


    }

    public function test_create_notification()
    {
        $units = (new Wialon())->listUnits()->take(2);
        $resource = Resource::findByName('punksolid@twitter.com');

        if ($resource){
            dump("encontrÃ³ resource");

        }

        $geofence = Geofence::findByName("my_geofence");
        if ($geofence){
            dump("encontro geocerca");
        }

        $notification = Notification::make(
            $resource,
            $geofence,
            $units,
            true,
            "MiNotificacion"
        );

        $this->assertEquals("MiNotificacion",$notification->n);

    }

    public function test_find_notification()
    {
        $notification = Notification::find();
        dd($notification);
    }


    public function test_list_notifications()
    {
//        $this->markTestIncomplete("Reconocer la estructura estandar de una notificacion");
        $wialon_api = new Wialon();
        $notifications = $wialon_api->listNotifications();
        dd($notifications);
        dd($notifications->first());

    }
}