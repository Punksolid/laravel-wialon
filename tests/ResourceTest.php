<?php
/**
 * Created by PhpStorm.
 * User: ps
 * Date: 16/10/18
 * Time: 04:14 AM
 */

namespace Punksolid\Wialon\Tests;

use Illuminate\Support\Collection;
use Orchestra\Testbench\TestCase;
use Punksolid\Wialon\Account;
use Punksolid\Wialon\Resource;
use Punksolid\Wialon\Wialon;

class ResourceTest extends TestCase
{


    /**
     * Define environment setup.
     *
     * @param  \Illuminate\Foundation\Application $app
     * @return void
     */
    protected function getEnvironmentSetUp($app)
    {
        $app['config']->set('services.wialon.token', '5dce19710a5e26ab8b7b8986cb3c49e58C291791B7F0A7AEB8AFBFCEED7DC03BC48FF5F8');
    }
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub


    }



    public function test_create_resource()
    {
        /**
         *
         * Punksolid\Wialon\Resource {#233
         * +nm: "punksolid_test3"
         * +cls: 3
         * +id: 18158941
         * +mu: 0
         * +uacl: 60606282529791
         * }
         *
         */
        $wialon_api = new  \Punksolid\Wialon\Wialon();
        $resource = $wialon_api->createResource("punksolid_testaaa13");

        $this->assertObjectHasAttribute("nm", $resource);
    }

    public function test_find_resource_by_name()
    {
        $resource = Resource::findByName('punksolid_test');

        $this->assertEquals("punksolid_test", $resource->nm);
        $this->assertObjectHasAttribute("id",$resource);
    }

    public function test_destroy_resource()
    {
        $resource = Resource::findByName('doloribus');

        $this->assertTrue($resource->destroy());

    }

    public function test_get_info_account()
    {
        dd(Account::details());
    }

    public function test_list_resources()
    {
        $resources = Resource::all();

        $this->assertInstanceOf(Collection::class,$resources);
    }

    public function test_assert_filter()
    {
        $resources = Resource::all();

        $filtered = $resources->whereIn("nm",[

            "punksolid@twitter.com"
        ]);

        $account = $filtered->first();

        $this->assertEquals("punksolid@twitter.com",$account->nm);

    }
}
